xpath解析：最常用最便捷高效的一种解析方式。通用性
HTML是XML的一个自己

节点

xpath解析原理
    -1、实例化一个etree的对象，并且将要被解析的页面源码数据加载到该对象中
    -2、调用etree对象中的xpath方法结合xpath表达方式实现标签的定位和内容的捕获。

环境安装 pip install lxml
xpath表达式
       -/表示从根节点开始定位，表示的是一个层级   xpath('/html/body/ul/li')
       -//表示多个层级                       xpath('/html//li')
       可以从任意位置开始定位                  xpath('//li') #找到html中所有的li标签

       返回的是列表[<Element li at 0x1e74d5acd88>, <Element li at 0x1e74d5acdc8>, <Element li at 0x1e74d5ace48>]

属性定位  tree.xpath('//div[@class="song" ]')  标签[@attrName='attrValue']
索引定位  tree.xpath('//div[@class="song"]/p[3]')  索引从1开始，不是0

定位好之后，取文本和属性
    -取文本
    /text() 获取标签中直系的文本内容
    //text() 获取标签在非直系的文本内容（所有的文本内容）
    tree.xpath('//div[@class="song"]/p[3]/text()')[0]
    tree.xpath('//div[@class="song"]//text()')
    -取属性
    /@attrName
    tree.xpath('//img/@src')  -->img/src

    相对查找 xpath('./li')

    在浏览器中可以复制xpath路径
    检查-元素—复制

